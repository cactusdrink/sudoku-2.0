{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mabel Ng Wan Xuan\\\\OneDrive\\\\desktop\\\\sudoku\\\\client\\\\src\\\\Sudoku.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Board from \"./ui/Board\";\nimport { REST } from \"./services/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getGrid() {\n  const grid = [];\n  for (let i = 0; i < 9; i++) {\n    grid[i] = Array(9).fill(0);\n  }\n  return grid;\n}\nfunction copy2DArray(from, to) {\n  if (!from || !from.length) {\n    console.error(\"Invalid array passed to copy2DArray\");\n    return;\n  }\n  for (let i = 0; i < from.length; i++) {\n    to[i] = [...from[i]];\n  }\n}\nfunction Sudoku() {\n  _s();\n  const [grid, setGrid] = useState(getGrid);\n  const [puzzleStatus, setPuzzleStatus] = useState(\"UNSOLVED\");\n  const [language, setLanguage] = useState('en');\n  const [errors, setErrors] = useState([]); // Array to track error positions\n  const initialGrid = useRef(getGrid());\n  function handleChange(row, col, e) {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\n        const newGrid = [...grid];\n        newGrid[row][col] = Number(e.target.value);\n        setGrid(newGrid);\n        checkErrors(newGrid); // Check for errors after input\n      }\n    }\n  }\n  function checkErrors(grid) {\n    const newErrors = [];\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        const value = grid[row][col];\n        if (value !== 0 && !isValid(value, row, col, grid)) {\n          newErrors.push({\n            row,\n            col\n          });\n        }\n      }\n    }\n    setErrors(newErrors);\n  }\n  function isValid(value, row, col, grid) {\n    // Check row and column\n    for (let i = 0; i < 9; i++) {\n      if (i !== col && grid[row][i] === value) return false;\n      if (i !== row && grid[i][col] === value) return false;\n    }\n\n    // Check 3x3 sub-grid\n    const startRow = Math.floor(row / 3) * 3;\n    const startCol = Math.floor(col / 3) * 3;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if ((startRow + i !== row || startCol + j !== col) && grid[startRow + i][startCol + j] === value) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  // Other functions (handleCreate, handleSolve, handleValidate, etc.) remain the same\n\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      if (data && data.game && Array.isArray(data.game) && data.game.length === 9) {\n        return data.game;\n      } else {\n        throw new Error(\"Invalid board data received\");\n      }\n    } catch (error) {\n      console.error(\"Error in handleCreate:\", error);\n      return getGrid(); // fallback to empty grid on error\n    }\n  }\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.error(\"Error in handleValidate:\", error);\n      return false; // fallback to unsolved status on error\n    }\n  }\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n      if (data.status) {\n        setPuzzleStatus(\"SOLVED\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"UNSOLVABLE\");\n        return grid;\n      }\n    } catch (error) {\n      console.error(\"Error in handleSolve:\", error);\n      return grid; // fallback to the current grid on error\n    }\n  }\n\n  // Toggle between languages\n  const toggleLanguage = () => {\n    setLanguage(prevLanguage => prevLanguage === 'en' ? 'jp' : 'en');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sudoku\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: language === 'en' ? '' : 'すうどく'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: language === 'en' ? 'Sūdoku' : '数独'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: toggleLanguage,\n        children: language === 'en' ? 'JP' : 'EN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-container\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        puzzle: initialGrid.current,\n        grid: grid,\n        errors: errors // Pass errors to the Board component\n        ,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interface\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-interface\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            readOnly: true,\n            value: puzzleStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-interface\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generator-btn btn\",\n            onClick: () => handleInterface(\"create\"),\n            children: language === 'en' ? 'Create' : '作成'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"validate-btn btn\",\n            onClick: () => handleInterface(\"validate\"),\n            children: language === 'en' ? 'Validate' : '検証'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"solve-btn btn\",\n            onClick: () => handleInterface(\"solve\"),\n            children: language === 'en' ? 'Solve' : '解決'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn btn\",\n            onClick: () => handleInterface(\"clear\"),\n            children: language === 'en' ? 'Clear' : 'クリア'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(Sudoku, \"pk4YouH8vqAE1B6L08BOIgFsnAQ=\");\n_c = Sudoku;\nexport default Sudoku;\nvar _c;\n$RefreshReg$(_c, \"Sudoku\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Board","REST","jsxDEV","_jsxDEV","getGrid","grid","i","Array","fill","copy2DArray","from","to","length","console","error","Sudoku","_s","setGrid","puzzleStatus","setPuzzleStatus","language","setLanguage","errors","setErrors","initialGrid","handleChange","row","col","e","re","target","value","test","Number","current","newGrid","checkErrors","newErrors","isValid","push","startRow","Math","floor","startCol","j","handleCreate","response","getBoard","data","json","game","isArray","Error","handleValidate","validateBoard","status","handleSolve","solveBoard","solution","toggleLanguage","prevLanguage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","puzzle","readOnly","handleInterface","_c","$RefreshReg$"],"sources":["C:/Users/Mabel Ng Wan Xuan/OneDrive/desktop/sudoku/client/src/Sudoku.js"],"sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport Board from \"./ui/Board\";\r\nimport { REST } from \"./services/api.js\";\r\n\r\nfunction getGrid() {\r\n  const grid = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    grid[i] = Array(9).fill(0);\r\n  }\r\n  return grid;\r\n}\r\n\r\nfunction copy2DArray(from, to) {\r\n  if (!from || !from.length) {\r\n    console.error(\"Invalid array passed to copy2DArray\");\r\n    return;\r\n  }\r\n  for (let i = 0; i < from.length; i++) {\r\n    to[i] = [...from[i]];\r\n  }\r\n}\r\n\r\nfunction Sudoku() {\r\n  const [grid, setGrid] = useState(getGrid);\r\n  const [puzzleStatus, setPuzzleStatus] = useState(\"UNSOLVED\");\r\n  const [language, setLanguage] = useState('en');\r\n  const [errors, setErrors] = useState([]); // Array to track error positions\r\n  const initialGrid = useRef(getGrid());\r\n\r\n  function handleChange(row, col, e) {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\r\n        const newGrid = [...grid];\r\n        newGrid[row][col] = Number(e.target.value);\r\n        setGrid(newGrid);\r\n        checkErrors(newGrid); // Check for errors after input\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkErrors(grid) {\r\n    const newErrors = [];\r\n\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        const value = grid[row][col];\r\n        if (value !== 0 && !isValid(value, row, col, grid)) {\r\n          newErrors.push({ row, col });\r\n        }\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n  }\r\n\r\n  function isValid(value, row, col, grid) {\r\n    // Check row and column\r\n    for (let i = 0; i < 9; i++) {\r\n      if (i !== col && grid[row][i] === value) return false;\r\n      if (i !== row && grid[i][col] === value) return false;\r\n    }\r\n\r\n    // Check 3x3 sub-grid\r\n    const startRow = Math.floor(row / 3) * 3;\r\n    const startCol = Math.floor(col / 3) * 3;\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        if ((startRow + i !== row || startCol + j !== col) && grid[startRow + i][startCol + j] === value) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Other functions (handleCreate, handleSolve, handleValidate, etc.) remain the same\r\n\r\n  async function handleCreate() {\r\n    try {\r\n      const response = await REST.getBoard();\r\n      const data = await response.json();\r\n      if (data && data.game && Array.isArray(data.game) && data.game.length === 9) {\r\n        return data.game;\r\n      } else {\r\n        throw new Error(\"Invalid board data received\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in handleCreate:\", error);\r\n      return getGrid(); // fallback to empty grid on error\r\n    }\r\n  }\r\n\r\n  async function handleValidate() {\r\n    try {\r\n      const response = await REST.validateBoard(grid);\r\n      const data = await response.json();\r\n      return data.status;\r\n    } catch (error) {\r\n      console.error(\"Error in handleValidate:\", error);\r\n      return false; // fallback to unsolved status on error\r\n    }\r\n  }\r\n\r\n  async function handleSolve() {\r\n    try {\r\n      const response = await REST.solveBoard(grid);\r\n      const data = await response.json();\r\n      if (data.status) {\r\n        setPuzzleStatus(\"SOLVED\");\r\n        return data.solution;\r\n      } else {\r\n        setPuzzleStatus(\"UNSOLVABLE\");\r\n        return grid;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in handleSolve:\", error);\r\n      return grid; // fallback to the current grid on error\r\n    }\r\n  }\r\n\r\n  // Toggle between languages\r\n  const toggleLanguage = () => {\r\n    setLanguage(prevLanguage => prevLanguage === 'en' ? 'jp' : 'en');\r\n  };\r\n\r\n  return (\r\n    <div className=\"Sudoku\">\r\n      <header className=\"App-header\">\r\n        <h2>{language === 'en' ? '' : 'すうどく'}</h2>\r\n        <h1>{language === 'en' ? 'Sūdoku' : '数独'}</h1>\r\n        <button className=\"language-button\" onClick={toggleLanguage}>\r\n          {language === 'en' ? 'JP' : 'EN'}\r\n        </button>\r\n      </header>\r\n      \r\n      <div className=\"sudoku-container\">\r\n        <Board\r\n          puzzle={initialGrid.current}\r\n          grid={grid}\r\n          errors={errors} // Pass errors to the Board component\r\n          handleChange={handleChange}\r\n        />\r\n        <div className=\"interface\">\r\n          <div className=\"info-interface\">\r\n            <input readOnly value={puzzleStatus} />\r\n          </div>\r\n          <div className=\"action-interface\">\r\n            <button\r\n              className=\"generator-btn btn\"\r\n              onClick={() => handleInterface(\"create\")}\r\n            >\r\n              {language === 'en' ? 'Create' : '作成'}\r\n            </button>\r\n            <button\r\n              className=\"validate-btn btn\"\r\n              onClick={() => handleInterface(\"validate\")}\r\n            >\r\n              {language === 'en' ? 'Validate' : '検証'}\r\n            </button>\r\n            <button\r\n              className=\"solve-btn btn\"\r\n              onClick={() => handleInterface(\"solve\")}\r\n            >\r\n              {language === 'en' ? 'Solve' : '解決'}\r\n            </button>\r\n            <button\r\n              className=\"clear-btn btn\"\r\n              onClick={() => handleInterface(\"clear\")}\r\n            >\r\n              {language === 'en' ? 'Clear' : 'クリア'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sudoku;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}