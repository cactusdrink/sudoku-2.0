{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mabel Ng Wan Xuan\\\\OneDrive\\\\desktop\\\\sudoku\\\\client\\\\src\\\\Sudoku.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Board from \"./ui/Board\";\nimport Interface from \"./ui/Interface\";\nimport { REST } from \"./services/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getGrid() {\n  const grid = [];\n  for (let i = 0; i < 9; i++) {\n    grid[i] = Array(9).fill(0);\n  }\n  return grid;\n}\nfunction copy2DArray(from, to) {\n  if (!from || !from.length) {\n    console.error(\"Invalid array passed to copy2DArray\");\n    return;\n  }\n  for (let i = 0; i < from.length; i++) {\n    to[i] = [...from[i]];\n  }\n}\nfunction Sudoku() {\n  _s();\n  const [grid, setGrid] = useState(getGrid);\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\n  const initialGrid = useRef(getGrid());\n  function handleChange(row, col, e) {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\n        const newGrid = [...grid];\n        newGrid[row][col] = Number(e.target.value);\n        setGrid(newGrid);\n      }\n    }\n  }\n  async function handleInterface(action) {\n    let newGrid;\n    try {\n      switch (action) {\n        case \"create\":\n          newGrid = await handleCreate();\n          if (newGrid) {\n            copy2DArray(newGrid, initialGrid.current);\n            setPuzzleStatus(\"\");\n            setGrid(newGrid);\n          }\n          break;\n        case \"solve\":\n          newGrid = await handleSolve();\n          if (newGrid) setGrid(newGrid);\n          break;\n        case \"clear\":\n          newGrid = getGrid();\n          copy2DArray(newGrid, initialGrid.current);\n          setGrid(newGrid);\n          setPuzzleStatus(\"\");\n          break;\n        case \"validate\":\n          const status = await handleValidate();\n          const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\n          setPuzzleStatus(puzzStats);\n          break;\n        default:\n          throw new Error(\"Invalid action\");\n      }\n    } catch (error) {\n      console.error(\"Error handling interface action:\", error);\n    }\n  }\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      if (data && data.game && Array.isArray(data.game) && data.game.length === 9) {\n        return data.game;\n      } else {\n        throw new Error(\"Invalid board data received\");\n      }\n    } catch (error) {\n      console.error(\"Error in handleCreate:\", error);\n      return getGrid(); // fallback to empty grid on error\n    }\n  }\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.error(\"Error in handleValidate:\", error);\n      return false; // Fallback to unsolved status on error\n    }\n  }\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n      if (data.status) {\n        setPuzzleStatus(\"** SOLVED **\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"** UNSOLVABLE **\");\n        return grid;\n      }\n    } catch (error) {\n      console.error(\"Error in handleSolve:\", error);\n      return grid; // Fallback to the current grid on error\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sudoku\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      puzzle: initialGrid.current,\n      grid: grid,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Interface, {\n      handleInterface: handleInterface,\n      status: puzzleStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Sudoku, \"bCq9JHtiLr7c5PUoQ6grxDf6724=\");\n_c = Sudoku;\nexport default Sudoku;\nvar _c;\n$RefreshReg$(_c, \"Sudoku\");","map":{"version":3,"names":["React","useState","useRef","Board","Interface","REST","jsxDEV","_jsxDEV","getGrid","grid","i","Array","fill","copy2DArray","from","to","length","console","error","Sudoku","_s","setGrid","puzzleStatus","setPuzzleStatus","initialGrid","handleChange","row","col","e","re","target","value","test","Number","current","newGrid","handleInterface","action","handleCreate","handleSolve","status","handleValidate","puzzStats","Error","response","getBoard","data","json","game","isArray","validateBoard","solveBoard","solution","className","children","puzzle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mabel Ng Wan Xuan/OneDrive/desktop/sudoku/client/src/Sudoku.js"],"sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Board from \"./ui/Board\";\r\nimport Interface from \"./ui/Interface\";\r\nimport { REST } from \"./services/api.js\";\r\n\r\nfunction getGrid() {\r\n  const grid = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    grid[i] = Array(9).fill(0);\r\n  }\r\n  return grid;\r\n}\r\n\r\nfunction copy2DArray(from, to) {\r\n  if (!from || !from.length) {\r\n    console.error(\"Invalid array passed to copy2DArray\");\r\n    return;\r\n  }\r\n  for (let i = 0; i < from.length; i++) {\r\n    to[i] = [...from[i]];\r\n  }\r\n}\r\n\r\nfunction Sudoku() {\r\n  const [grid, setGrid] = useState(getGrid);\r\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\r\n  const initialGrid = useRef(getGrid());\r\n\r\n  function handleChange(row, col, e) {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\r\n        const newGrid = [...grid];\r\n        newGrid[row][col] = Number(e.target.value);\r\n        setGrid(newGrid);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function handleInterface(action) {\r\n    let newGrid;\r\n    try {\r\n      switch (action) {\r\n        case \"create\":\r\n          newGrid = await handleCreate();\r\n          if (newGrid) {\r\n            copy2DArray(newGrid, initialGrid.current);\r\n            setPuzzleStatus(\"\");\r\n            setGrid(newGrid);\r\n          }\r\n          break;\r\n        case \"solve\":\r\n          newGrid = await handleSolve();\r\n          if (newGrid) setGrid(newGrid);\r\n          break;\r\n        case \"clear\":\r\n          newGrid = getGrid();\r\n          copy2DArray(newGrid, initialGrid.current);\r\n          setGrid(newGrid);\r\n          setPuzzleStatus(\"\");\r\n          break;\r\n        case \"validate\":\r\n          const status = await handleValidate();\r\n          const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\r\n          setPuzzleStatus(puzzStats);\r\n          break;\r\n        default:\r\n          throw new Error(\"Invalid action\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error handling interface action:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleCreate() {\r\n    try {\r\n      const response = await REST.getBoard();\r\n      const data = await response.json();\r\n      if (data && data.game && Array.isArray(data.game) && data.game.length === 9) {\r\n        return data.game;\r\n      } else {\r\n        throw new Error(\"Invalid board data received\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in handleCreate:\", error);\r\n      return getGrid(); // fallback to empty grid on error\r\n    }\r\n  }\r\n\r\n  async function handleValidate() {\r\n    try {\r\n      const response = await REST.validateBoard(grid);\r\n      const data = await response.json();\r\n      return data.status;\r\n    } catch (error) {\r\n      console.error(\"Error in handleValidate:\", error);\r\n      return false; // Fallback to unsolved status on error\r\n    }\r\n  }\r\n\r\n  async function handleSolve() {\r\n    try {\r\n      const response = await REST.solveBoard(grid);\r\n      const data = await response.json();\r\n      if (data.status) {\r\n        setPuzzleStatus(\"** SOLVED **\");\r\n        return data.solution;\r\n      } else {\r\n        setPuzzleStatus(\"** UNSOLVABLE **\");\r\n        return grid;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in handleSolve:\", error);\r\n      return grid; // Fallback to the current grid on error\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Sudoku\">\r\n      <Board\r\n        puzzle={initialGrid.current}\r\n        grid={grid}\r\n        handleChange={handleChange}\r\n      />\r\n      <Interface handleInterface={handleInterface} status={puzzleStatus} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sudoku;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}